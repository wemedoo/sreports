@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Constants;

@model sReportsV2.DTOs.Encounter.EncounterDataOut

@{
    ViewBag.Title = @sReportsV2.Resources.TextLanguage.Encounter_Create;
    var userCookieData = ViewBag.UserCookieData;
    var hasAddEncounterPerm = userCookieData.UserHasPermission(PermissionNames.AddEncounter, ModuleNames.Patients);
    var hasAddNewDocumentPerm = userCookieData.UserHasPermission(PermissionNames.CreateUpdate, ModuleNames.Patients);
    bool? readOnly = !hasAddEncounterPerm;
    string disabled = readOnly.Value ? "disabled" : "";
    bool hasPeriod = Model != null && Model.Period != null;
    DateTime startDate = hasPeriod ? Model.Period.StartDate : DateTime.Now;
    string timeZoneOffset = ViewBag.UserCookieData.TimeZoneOffset;
    startDate = startDate.ToTimeZoned(timeZoneOffset);
}


<form method="post" onsubmit="return submitEncounterForm(event, this)" novalidate>


    <input type="hidden" class="form-control" id="id" value="@(Model != null && Model.Id != 0 ? Model.Id : 0 )" />
    <input type="hidden" class="form-control" id="eocId" value="@(Model != null ? Model.EpisodeOfCareId : ViewBag.EpisodeOfCareId )" />
    <input type="hidden" class="form-control" id="patientId" value="@(Model != null ? Model.PatientId : ViewBag.PatientId )" />

    <div class="form-row">
        <div class="col-12">
            <div class="tree-form-title">
                @(Model != null && Model.ServiceType != null && Model.ServiceType.Thesaurus != null ? Model.ServiceType.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage) : sReportsV2.Resources.TextLanguage.NewEncounter)
            </div>
            <div class="d-flex margin-top-20">
                <div class="advanced-filter-item">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.Status
                    </div>
                    <select class="filter-input arrow-select patient-background padding-right-36" id="status" name="Status" required @disabled>
                        <option value=""></option>
                        @foreach (var statusOption in ViewBag.EncounterStatuses)
                        {
                            <option value="@statusOption.Thesaurus.Id" @(Model != null && Model.Status != null && Model.Status.Thesaurus.Id.Equals(statusOption.Thesaurus.Id) ? "selected" : "")>
                                @statusOption.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage)
                            </option>
                        }
                    </select>
                </div>
                <div class="advanced-filter-item">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.Class
                    </div>
                    <select class="filter-input arrow-select patient-background padding-right-36" id="classification" name="Classification" required @(Model != null && Model.Class != null ? "-hasvalue" : "") @disabled>
                        <option value=""></option>
                        @foreach (var classification in ViewBag.EncounterClassifications)
                        {
                            <option value="@classification.Thesaurus.Id" @(Model != null && Model.Class != null && Model.Class.Thesaurus != null && Model.Class.Thesaurus.Id.Equals(classification.Thesaurus.Id) ? "selected" : "")>
                                @classification.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage)
                            </option>
                        }
                    </select>
                </div>
            </div>
            <div class="d-flex margin-top-20">
                <div class="advanced-filter-item">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.Encounter_Type_Name
                    </div>
                    <select class="filter-input arrow-select patient-background padding-right-36" id="type" name="Type" required @disabled>
                        <option value=""></option>
                        @foreach (var encounterType in ViewBag.EncounterType)
                        {
                            <option value="@encounterType.Thesaurus.Id" @(Model != null && Model.Type != null && Model.Type.Thesaurus != null && Model.Type.Thesaurus.Id.Equals(encounterType.Thesaurus.Id) ? "selected -has-value" : "")>
                                @encounterType.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage)
                            </option>
                        }
                    </select>
                </div>
                <div class="advanced-filter-item">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.Encounter_ServiceType_Name
                    </div>
                    <select class="filter-input arrow-select patient-background padding-right-36" id="servicetype" name="ServiceType" required @disabled>
                        <option value=""></option>
                        @foreach (var encounterServiceType in ViewBag.ServiceTypes)
                        {
                            <option value="@encounterServiceType.Thesaurus.Id" @(Model != null && Model.ServiceType != null && Model.ServiceType.Thesaurus != null && Model.ServiceType.Thesaurus.Id.Equals(encounterServiceType.Thesaurus.Id) ? "selected" : "")>
                                @encounterServiceType.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage)
                            </option>
                        }
                    </select>
                </div>

            </div>
            <div class="d-flex margin-top-20">
                <div class="datetime-picker-container">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.EOC_PeriodStartDate
                    </div>
                    <div class="date-wrapper input-border mr-auto">
                        @Html.Partial("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                        {
                            InputAttributes = new Dictionary<object, object> {
                                { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" },
                                { "required", null },
                                { "data-parent-field", ".datetime-picker-container" },
                                { "value", startDate.ToString(ViewBag.DateFormat) },
                                { "id", "encounterStartInput" },
                                { "name", "encounterStartInput" }
                            }
                        })
                        <input id="start"
                               name="start"
                               type="text"
                               class="date-time-local d-none form-element-field filter-input"
                               value="@(startDate.ToString("s"))"
                               required />
                        <div class="img-wrapper">
                            <img class=" d-inline-block"
                                 src="~/Content/img/icons/datetime_field.svg"
                                 @Html.DateTimeDisabled(readOnly)>
                        </div>
                    </div>
                    <div class="time-wrapper input-border">
                        <input id="startTime"
                               name="startTime"
                               type="text"
                               class="time-part time-helper d-inline-block border-0 input-padding filter-input"
                               data-parent-field=".datetime-picker-container"
                               value="@(startDate.GetTimePart())"
                               @disabled>
                        <div class="clock-wrapper">
                            <i class="fas fa-clock" @Html.TimeDisabled(readOnly)></i>
                        </div>
                    </div>
                </div>
                <div class="datetime-picker-container">
                    <div class="label filter-label">
                        @sReportsV2.Resources.TextLanguage.EOC_PeriodEndDate
                    </div>
                    <div class="date-wrapper input-border mr-auto w-6">
                        @Html.Partial("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                        {
                            InputAttributes = new Dictionary<object, object> {
                                { "class", "date-helper d-inline-block border-0 date-width input-padding filter-input" },
                                { @disabled, null},
                                { "value", hasPeriod ? Model.Period.EndToTimeZonedString(timeZoneOffset, ViewBag.DateFormat) : "" },
                                { "id", "encounterEndInput" },
                                { "name", "encounterEndInput" },
                                { "data-parent-field", ".datetime-picker-container" },
                                { "data-no-color-change", "true" }
                            }
                        })
                        <input id="end"
                               name="end"
                               type="text"
                               class="date-time-local d-none form-element-field filter-input"
                               value="@(hasPeriod ? Model.Period.EndToTimeZonedString(timeZoneOffset, "s") : "")" />
                        <div class="img-wrapper">
                            <img class=" d-inline-block" src="~/Content/img/icons/datetime_field.svg" @Html.DateTimeDisabled(readOnly)>
                        </div>
                    </div>
                    <div class="time-wrapper w-35 input-border">
                        <input type="text"
                               id="endTime"
                               name="endTime"
                               placeholder="@DateConstants.TimeFormatDisplay"
                               class="time-part time-helper d-inline-block border-0 input-padding filter-input"
                               value="@(hasPeriod ? Model.Period.EndToTimeZonedTimeString(timeZoneOffset) : "")"
                               data-no-color-change="true"
                               data-parent-field=".datetime-picker-container"
                               @disabled>
                        <div class="clock-wrapper">
                            <i class="fas fa-clock" @Html.TimeDisabled(readOnly)></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="button-container">
        @if (hasAddEncounterPerm)
        {
            <button class="submit-button encounter-submit-button" type="submit">
                @sReportsV2.Resources.TextLanguage.Save
            </button>
        }
        @if (Model != null && hasAddNewDocumentPerm)
        {
            <button class="submit-button show-form-referrals-button" type="button">
                @sReportsV2.Resources.TextLanguage.NewDocument
            </button>
        }
    </div>
</form>

@Scripts.RenderFormat("<script type=\"text/javascript\" src=\"{0}?v=" + System.Reflection.Assembly.GetAssembly(typeof(sReportsV2.MvcApplication)).GetName().Version.ToString() + "\"></script>", "~/Scripts/sReports/encounter.js")