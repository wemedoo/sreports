@using sReportsV2.Common.Extensions;
@using sReportsV2.Common.Enums;
@using sReportsV2.DTOs.DTOs.Consensus.DataOut;

@model TrackerDataOut
@{
    int iterationCounter = 0;
    var iterations = Model.Iterations;
    var iterationsTotalNum = iterations.Count;
}

<div id="iterations" class="tracker-partial">
    @foreach (var iteration in iterations)
    {
        { iterationCounter++; }
        <div class="iteration-header" onclick="collapseIteration(this)" data-id="iteration-@iteration.IterationId" data-toggle="collapse" data-target="#iteration-@iteration.IterationId" aria-expanded="false" aria-controls="iteration-@iteration.IterationId">
            <span>Iteration @iterationCounter</span>
            @renderArrowIcon(iterationCounter, iterationsTotalNum)
            @if (Model.ActiveIterationId == iteration.IterationId && iteration.State == IterationState.InProgress)
            {
                <span class="float-right terminate-consensus margin-right-20" onclick="terminateCurrentIteration()">
                    <i class="fas fa-ban"></i> Terminate current iteration
                </span>
            }
        </div>
        <div class="consensus-iteration-table collapse @(iterationCounter == iterationsTotalNum ? "show":"")" id="iteration-@iteration.IterationId">
            <div class="table-responsive filter-border card card-body p-0 border-0">
                <table class="table table-striped table-border">
                    <thead class="color-header">
                        <tr class="table-header-row">
                            <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.Users.ToUpper()</th>
                            <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.FirstLogged.ToUpper()</th>
                            <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.LastLogged.ToUpper()</th>
                            <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.ConsensusStatus.ToUpper()</th>
                            <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.Reminder.ToUpper()</th>
                            <th class="text-center" style="border-bottom: unset; border-top: unset;">@sReportsV2.Resources.TextLanguage.Details.ToUpper()</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var instance in iteration.Instances)
                        {
                            <tr class="table-content-row">
                                <td>@instance.UserName</td>
                                <td>@instance.EntryDateTime.ToTimeZonedDateTime(ViewBag.UserCookieData.TimeZoneOffset as string, ViewBag.DateFormat as string)</td>
                                <td>@instance.LastUpdate.ToTimeZonedDateTime(ViewBag.UserCookieData.TimeZoneOffset as string, ViewBag.DateFormat as string)</td>
                                <td>
                                    @if (iteration.State == IterationState.Terminated)
                                    {
                                        <div class="consensus-not-submited">
                                            <i class="fas fa-ban"></i>
                                            @sReportsV2.Resources.TextLanguage.Terminated
                                        </div>
                                    }
                                    else
                                    {
                                        if (instance.LastUpdate != null)
                                        {
                                            <div class="consensus-status cs-@instance.PercentDone">
                                                @instance.PercentDone %
                                            </div>
                                            <div class="d-inline-block">
                                                @sReportsV2.Resources.TextLanguage.Finished
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="consensus-not-submited">
                                                <i class="fas fa-clock"></i>
                                                @sReportsV2.Resources.TextLanguage.Not_Started
                                            </div>
                                        }
                                    }
                                </td>
                                <td>
                                    @if (instance.PercentDone < 100 && iteration.State != IterationState.Terminated)
                                    {
                                        <div class="consensus-reminder" onclick="remindUser('@instance.UserRef', '@instance.IsOutsideUser.ToString()', '@iteration.IterationId')">
                                            <i class="far fa-bell"></i> @sReportsV2.Resources.TextLanguage.Send_Reminder
                                        </div>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (instance.LastUpdate != null)
                                    {
                                        @Html.ActionLink(sReportsV2.Resources.TextLanguage.ShowUserQuestionnaire, "ShowUserQuestionnaire", "FormConsensus", new { userId = instance.UserRef, consensusId = Model.ConsensusId, isOutsideUser = instance.IsOutsideUser, iterationId = iteration.IterationId, }, new { target = "_blank", rel = "noreferrer", @class = "advanced-link" })
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>


    }
</div>

@helper renderArrowIcon(int iterationCounter, int iterationsTotalNum)
{
    if (iterationCounter == iterationsTotalNum)
    {
        <i class="fas iteration-icon fa-angle-up"></i>
    }
    else
    {
        <i class="fas iteration-icon fa-angle-down"></i>
    }
}

