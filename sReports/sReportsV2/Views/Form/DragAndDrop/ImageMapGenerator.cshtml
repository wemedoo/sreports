@using sReportsV2.Common.Extensions;
@model sReportsV2.DTOs.Form.DataOut.FormPageDataOut

@{
    string mapId = Model != null && Model.ImageMap != null ? Model.ImageMap.MapId : GuidExtension.NewGuidStringWithoutDashes();
    string imageMapUrl = Model != null && Model.ImageMap != null ? Model.ImageMap.Url.ToString() : "";
}
<div class="input-file-container">
    <input type="file"
           id="imgMapImgFile"
           style="display: none"
           data-id="imagemapUrl" />
    <input type="hidden" id="imagemapUrl" value="@imageMapUrl"/>
    @if (!ViewBag.ReadOnly)
    {
        <div class="remove-file-icon">
            <img src="~/Content/img/icons/close_black.svg" />
        </div>
    }
</div>
<div class="imagemap-generator">
    <div class="imagemaps-wrapper @(ViewBag.ReadOnly ? "w-100" : "")" id="draggableContainer">
        <img 
             src="@(string.IsNullOrEmpty(imageMapUrl) ? "" : Url.Action("Download", "Blob", routeValues: new { resourceId = imageMapUrl.GetResourceNameFromUri() }))"
             id="imageWithMap"
             draggable="false"
             usemap="#designer-@mapId"
             style="display: @(!string.IsNullOrEmpty(imageMapUrl) ? "block" : "none");">
        <map class="imagemaps"
             id="designer-@mapId"
             name="designer-@mapId">
            @Html.Raw(!string.IsNullOrEmpty(imageMapUrl) ? Model.ImageMap.Map : "")
        </map>
        @if (!ViewBag.ReadOnly)
        {
            <div class="file-upload-button" style="display: @(!string.IsNullOrEmpty(imageMapUrl) ? "none" : "");">
                <div>
                    <img src="~/Content/img/icons/browse_green.svg" />
                </div>
                <div>
                    @sReportsV2.Resources.TextLanguage.Browse_Image
                </div>
            </div>
        }
    </div>
    @if (!ViewBag.ReadOnly)
    {
        <div class="imagemaps-control" @Html.Raw(!string.IsNullOrEmpty(imageMapUrl) ? "" : "style='display:none'")>
            <div class="add-new-button-wrapper">
                <button type="button" class="btn btn-add-new btn-add-map">Add New</button>
            </div>
            <fieldset>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Title</th>
                            <th scope="col">Delete</th>
                        </tr>
                    </thead>
                    <tbody class="imagemaps-output">
                        <tr class="item-###">
                            <th scope="row">###</th>
                            <td><select class="filter-input area-fieldset"></select></td>
                            <td>
                                <img class="btn-delete" src="~/Content/img/icons/close_black.svg" />
                            </td>
                        </tr>
                    </tbody>
                </table>
            </fieldset>
        </div>
    }

</div>
<script>
    window['newTemplate'] = loadFieldSets($('.imagemaps-output'), $('#elementId').val());
    localStorage.setItem('imageMapsItemTemplate', $(window['newTemplate']).html());

    $(document).ready(function () {
        $('.imagemaps-wrapper').imageMaps({
            addBtn: '.btn-add-map',
            // rectWidth: 100,
            // rectHeight: 60,
            // areaHref: '.area-href',
            // areaTarget: '.area-target',
            // btnDelete: '.btn-delete',
            output: '.imagemaps-output',
            stopCallBack: function (active, coords) {
                // console.log(active);
                // console.log(coords);
            }
        });

        $('.btn-get-map').on('click', function () {
            alert(getImageMapAreas());
        });
    })
</script>
