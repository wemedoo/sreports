@using sReportsV2.DTOs.Common.DataOut
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.Username.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.FirstName.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.LastName.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.Organizations.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;">@sReportsV2.Resources.TextLanguage.Roles.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (UserDataOut entry in Model.Data)
            {
                string userBlocked = entry.GetStateByOrganizationId((ViewBag.UserCookieData.ActiveOrganization as int?).GetValueOrDefault()) == sReportsV2.Common.Enums.UserState.Blocked ? "td-user-blocked": string.Empty; 

                <tr id="row-@entry.Id" onclick="clickedRow(event,'@entry.Id')" class="table-content-row ">
                    <td class="@userBlocked">@entry.Username</td>
                    <td class="@userBlocked">@entry.FirstName</td>
                    <td class="@userBlocked">@entry.LastName</td>
                    <td class="@userBlocked">
                       @Html.Raw(entry.GetorganizationListFormatted())
                    </td>
                    <td class="@userBlocked">
                        @{var roles = entry.GetRolesByOrganizationId(ViewBag.UserCookieData.ActiveOrganization);}
                        @for (int i = 0; i < roles.Count; i++)
                        {
                            @(roles != null ? roles[i] : "")
                            if (i < roles.Count - 1)
                            {
                                <text>,</text>
                            }
                        }
                    </td>
                    <td>
                        <div class="dropdown show">
                            <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@entry.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <img class="dots" src="~/Content/img/icons/3dots.png">
                            </a>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.Id">
                                <a class="dropdown-item" href="#" onclick="editEntity(event,'@entry.Id')"><img class="edit-svg-size" src="~/Content/img/icons/edit.svg">@sReportsV2.Resources.TextLanguage.Edit</a>
                                <a class="dropdown-item" href="#" onclick="setUserState(event, '@entry.Id', '@sReportsV2.Common.Enums.UserState.Archived', '@(entry.LastUpdate != null ? entry.LastUpdate.Value.ToString("o") : "")')"><img class="edit-svg-size" src="~/Content/img/icons/archive_1.svg">@sReportsV2.Resources.TextLanguage.Archive</a>
                                <a class="dropdown-item" href="#" onclick="setUserState(event, '@entry.Id', '@(entry.GetStateByOrganizationId((ViewBag.UserCookieData.ActiveOrganization as int?).GetValueOrDefault()) == sReportsV2.Common.Enums.UserState.Blocked ? sReportsV2.Common.Enums.UserState.Active : sReportsV2.Common.Enums.UserState.Blocked)', '@(entry.LastUpdate != null ? entry.LastUpdate.Value.ToString("o") : "")')">
                                    <img class="edit-svg-size" src="~/Content/img/icons/block.svg">@(entry.GetStateByOrganizationId((ViewBag.UserCookieData.ActiveOrganization as int?).GetValueOrDefault()) == sReportsV2.Common.Enums.UserState.Blocked ? sReportsV2.Resources.TextLanguage.Unblock : sReportsV2.Resources.TextLanguage.Block)
                                </a>
                                <a class="dropdown-item d-flex" href="#" onclick="generatePassword(event, '@entry.Email',false)"><img class="edit-svg-size mt-auto mb-auto" src="~/Content/img/icons/password.svg"><div>@sReportsV2.Resources.TextLanguage.ChangePassword</div></a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pager-container">
        @Html.Partial("Pagination")
    </div>
</div>
