@using sReportsV2.DTOs.Common.DataOut;
@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Enums;
@using sReportsV2.DTOs.DTOs.User.DataOut;

@{
    var userCookieData = ViewBag.UserCookieData;
    bool hasCreateUpdatePerm = userCookieData.UserHasPermission(PermissionNames.CreateUpdate, ModuleNames.Administration);
    bool hasViewPerm = userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.Administration);
    bool showUnassignedUsers = Model.DataIn.ShowUnassignedUsers;
}
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="Username" class="sort-arrow" style="border-bottom: unset;border-top: unset; width: 15%" onclick="sortTable('Username')">@sReportsV2.Resources.TextLanguage.Username.ToUpper()</th>
                <th id="FirstName" class="sort-arrow" style="border-bottom: unset; border-top: unset; width: 10%" onclick="sortTable('FirstName')">@sReportsV2.Resources.TextLanguage.FirstName.ToUpper()</th>
                <th id="LastName" class="sort-arrow" style="border-bottom: unset; border-top: unset; width: 10%" onclick="sortTable('LastName')">@sReportsV2.Resources.TextLanguage.LastName.ToUpper()</th>
                <th id="UserOrganizations" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('UserOrganizations')">@sReportsV2.Resources.TextLanguage.Organizations.ToUpper()</th>
                <th id="Roles" class="sort-arrow" style="border-bottom: unset; border-top: unset; width: 20%" onclick="sortTable('Roles')">@sReportsV2.Resources.TextLanguage.Roles.ToUpper()</th>
                <th style="border-bottom: unset; border-top: unset; width: 3%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (UserViewDataOut entry in Model.Data)
            {
                bool isUserBlocked = entry.IsUserBlocked((ViewBag.UserCookieData.ActiveOrganization as int?).GetValueOrDefault());
                string userBlockedStyle = isUserBlocked ? "td-user-blocked" : string.Empty;

                <tr id="row-@entry.Id" onclick="clickedRow(event,'@entry.Id')" class="table-content-row ">
                    <td class="@userBlockedStyle">@entry.Username</td>
                    <td class="@userBlockedStyle">@entry.FirstName</td>
                    <td class="@userBlockedStyle">@entry.LastName</td>
                    <td class="@userBlockedStyle">@entry.UserOrganizations</td>
                    <td class="@userBlockedStyle">@entry.Roles</td>
                    <td>
                        @if(hasCreateUpdatePerm || hasViewPerm)
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" role="button" id="dropdownMenuLink-@entry.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img class="dots" src="~/Content/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@entry.Id">
                                    @if (hasCreateUpdatePerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event,'@entry.Id')"><img class="edit-svg-size" src="~/Content/img/icons/edit.svg">@sReportsV2.Resources.TextLanguage.Edit</a>
                                        if (showUnassignedUsers)
                                        {
                                            <a class="dropdown-item" href="#" onclick="setUserState(event, '@entry.Id', '')"><img class="edit-svg-size" src="~/Content/img/icons/archive_1.svg">@sReportsV2.Resources.TextLanguage.Archive</a>
                                        }
                                        else
                                        {
                                            <a class="dropdown-item" href="#" onclick="setUserState(event, '@entry.Id', '@UserState.Archived')"><img class="edit-svg-size" src="~/Content/img/icons/archive_1.svg">@sReportsV2.Resources.TextLanguage.Archive</a>
                                            <a class="dropdown-item" href="#" onclick="setUserState(event, '@entry.Id', '@(isUserBlocked ? UserState.Active : UserState.Blocked)')">
                                                <img class="edit-svg-size" src="~/Content/img/icons/block.svg">@(isUserBlocked? sReportsV2.Resources.TextLanguage.Unblock : sReportsV2.Resources.TextLanguage.Block)
                                            </a>
                                        }
                                        <a class="dropdown-item d-flex" href="#" onclick="generatePassword(event, '@entry.Email', false)"><img class="edit-svg-size mt-auto mb-auto" src="~/Content/img/icons/password.svg"><div>@sReportsV2.Resources.TextLanguage.ChangePassword</div></a>
                                    }
                                    @if (hasViewPerm)
                                    {
                                        <a class="dropdown-item" href="#" onclick="editEntity(event,'@entry.Id')"><img class="edit-svg-size" src="~/Content/img/icons/info_grey.svg">@sReportsV2.Resources.TextLanguage.View</a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pager-container">
        @Html.Partial("Pagination")
    </div>
</div>
