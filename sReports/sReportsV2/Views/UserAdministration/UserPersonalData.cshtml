@using sReportsV2.Common.Enums;
@using sReportsV2.Common.Extensions;
@model sReportsV2.DTOs.Common.DataOut.UserDataOut

@{ 
    string disabled = ViewBag.Disabled != null ? ViewBag.Disabled : string.Empty;
}

<div class="input-group-title">
    @sReportsV2.Resources.TextLanguage.PersonalGeneralData
    @if (Model != null && ViewBag.UserCookieData.Id == Model.Id)
    {
        <button type="button" class="btn btn-add-new ml-2" onclick="showChangePasswordModal(event, @Model.Id)">
            <i class="fas fa-edit resize-circle"></i> <span class="text-add-new"> @sReportsV2.Resources.TextLanguage.ChangePassword</span>
        </button>
    }

</div>
<div class="d-flex">
    <div class="user-input-group">
        <div class="advanced-filter-item input-margin margin-top-15">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.Prefixes @RenderOptionalPlaceholderInLabel()
            </div>
            <div class="position-relative d-flex margin-top-10">
                @foreach (var option in Enum.GetNames(typeof(UserPrefix)))
                {
                    <label class="form-radio-label margin-right-20">
                        <input type="radio"
                               id="prefix"
                               name="prefix"
                               value="@option"
                               class="form-radio-field"
                               @(Model != null && Model.Prefix.ToString() == option ? "checked" : string.Empty) @ViewBag.Disabled>

                        <i class="form-radio-button user-radio"></i>
                        <span class="user-radio-span">
                            @sReportsV2.Resources.TextLanguage.ResourceManager.GetString(option)
                        </span>
                    </label>
                }
            </div>
        </div>
        <div class="advanced-filter-item input-margin margin-top-15">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.AcademicPosition @RenderOptionalPlaceholderInLabel()
            </div>
            <div class="position-relative margin-top-10">
                @foreach (var option in Enum.GetValues(typeof(AcademicPosition)).Cast<AcademicPosition>())
                {
                    <label class="form-checkbox-label margin-bottom-15">

                        <input name="academicPosition"
                               value="@option"
                               @(Model != null && Model.AcademicPositions.Contains(option) ? "checked" : "")
                               class="form-checkbox-field academic-position"
                               type="checkbox" @ViewBag.Disabled />
                        <i class="form-checkbox-button table-checkbox dynamic-checkbox-size"></i>
                        <span class="user-radio-span pt-0">
                            @sReportsV2.Resources.TextLanguage.ResourceManager.GetString(option.ToString())
                        </span>
                    </label>
                }
            </div>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.FirstName @RenderRequiredIndicator()
            </div>
            <input required class="filter-input" type="text" id="firstName" name="FirstName" value="@(Model != null && Model.FirstName != null ? Model.FirstName : "")" @ViewBag.Disabled />
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.MiddleName
            </div>
            <input class="filter-input" type="text" id="middleName" name="MiddleName" value="@(Model != null && Model.MiddleName != null ? Model.MiddleName : "")" @RenderOptionalPlaceholderInInput() @ViewBag.Disabled />
        </div>
        @Html.Partial("UserRolesForm", Model)
        @if (!ViewBag.UserAdministration)
        {
            @Html.Partial("UserRolesDisplay", Model)
        }
    </div>
    <div class="user-input-group">
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.SecondName @RenderRequiredIndicator()
            </div>
            <input required class="filter-input" type="text" id="lastName" name="LastName" value="@(Model != null && Model.LastName != null ? Model.LastName : "")" @ViewBag.Disabled />
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.DayOfBirth
            </div>
            <div class="position-relative datetime-picker-container">
                @Html.Partial("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                {
                    InputAttributes = new Dictionary<object, object> { 
                        { "class", "filter-input" }, 
                        { "id", "dayOfBirth" }, 
                        { "name", "dayOfBirth" }, 
                        { "value", Model != null && Model.DayOfBirth != null ? Model.DayOfBirth.ToTimeZonedDateTime(ViewBag.UserCookieData.TimeZoneOffset as string).Value.ToString(ViewBag.DateFormat) : "" }, 
                        { disabled, null } 
                    },
                    InputBtnAttributes = new Dictionary<object, object> { 
                        { "class", "date-img dynamic-form" }, 
                        { @Html.DateTimeDisabled(((bool?)ViewBag.ReadOnly)), null } 
                    },
                })
            </div>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.BusinessEmail @RenderRequiredIndicator()
            </div>
            <div class="position-relative">
                <input required class="filter-input email" type="text" id="email" name="Email" value="@(Model != null && Model.Email != null ? Model.Email : "")" @ViewBag.Disabled />
                <i id="emailValid" class="fas username-validate-icon"></i>
            </div>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.PersonalEmail
            </div>
            <div class="position-relative">
                <input class="filter-input email" type="text" id="personalEmail" name="PersonalEmail" value="@(Model != null && Model.PersonalEmail != null ? Model.PersonalEmail : "")" @ViewBag.Disabled />
            </div>
        </div>
        <div class="advanced-filter-item input-margin @(Model == null ? "d-none": "")" id="systemIdInput">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.SystemId
            </div>
            <div class="position-relative">
                <input class="filter-input" type="text" id="systemId" value="@(Model != null ? Model.Id.ToString() : "")" readonly @RenderOptionalPlaceholderInInput() @ViewBag.Disabled />
            </div>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.Username @RenderRequiredIndicator()
            </div>
            <div class="position-relative">
                <input required class="filter-input" @Html.ReadOnly(Model != null && !string.IsNullOrWhiteSpace(Model.Username)) type="text" id="username" name="Username" value="@(Model != null && Model.Username != null ? Model.Username : "")" @ViewBag.Disabled />
                <i id="usernameValid" class="fas username-validate-icon"></i>
            </div>
        </div>
    </div>

</div>
<div class="input-group-title address-title">
    @sReportsV2.Resources.TextLanguage.UserAddressData
</div>
<div class="d-flex">
    <div class="user-input-group">
        <div class="advanced-filter-item input-margin country-select-input">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.Country @RenderRequiredIndicator()
            </div>
            <select required class="filter-input arrow-select" id="countryId" name="countryId" @ViewBag.Disabled>
                <option value=""></option>
            </select>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.State
            </div>
            <input class="filter-input" type="text" id="state" name="state" value="@(Model != null && Model.Address != null && Model.Address.State != null ? Model.Address.State : "")" @ViewBag.Disabled @RenderOptionalPlaceholderInInput()/>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.City
            </div>
            <input class="filter-input" type="text" id="city" name="city" value="@(Model != null && Model.Address != null && Model.Address.City != null ? Model.Address.City : "")" @ViewBag.Disabled @RenderOptionalPlaceholderInInput()/>
        </div>
    </div>
    <div class="user-input-group">
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.Postal_code
            </div>
            <input class="filter-input" type="text" id="postalCode" name="postalCode" value="@(Model != null && Model.Address != null && Model.Address.PostalCode != null ? Model.Address.PostalCode : "")" @ViewBag.Disabled @RenderOptionalPlaceholderInInput()/>
        </div>
        <div class="advanced-filter-item input-margin">
            <div class="label filter-label">
                @sReportsV2.Resources.TextLanguage.Street
            </div>
            <input class="filter-input" type="text" id="street" name="street" value="@(Model != null && Model.Address != null && Model.Address.Street != null ? Model.Address.Street : "")" @ViewBag.Disabled @RenderOptionalPlaceholderInInput()/>
        </div>
    </div>
</div>

@helper RenderRequiredIndicator()
{
    <div class="label-required">*</div>
}

@helper RenderOptionalPlaceholderInLabel()
{
    <div class="user-placeholder">@sReportsV2.Resources.TextLanguage.Optional</div>
}

@helper RenderOptionalPlaceholderInInput()
{
    @: placeholder = "@sReportsV2.Resources.TextLanguage.Optional"
}

<script>
    userCountryId = '@(Model != null && Model.Address != null && Model.Address.CountryId != null ? Model.Address.CountryId.ToString() : "")';    
</script>