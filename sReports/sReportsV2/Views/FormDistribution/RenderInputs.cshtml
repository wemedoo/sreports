@using sReportsV2.DTOs.FormDistribution.DataOut;
@using sReportsV2.Domain.Entities.Constants;

@model FormFieldDistributionDataOut

@foreach (FormFieldDistributionSingleParameterDataOut singleParameter in Model.ValuesCombination)
{
    <fieldset class="">
        @if (Model.Type == "radio" || Model.Type == "select")
        {
            <div class='form-fieldset-description'>@sReportsV2.Resources.TextLanguage.ProbabilitiesOfEachOfThe @Model.ValuesCombination[0].Values.Count @sReportsV2.Resources.TextLanguage.DifferentOutcomes</div>
        }

        @if (Model.Type == FieldTypes.Number)
        {
            <fieldset class="form-element form-input">
                <label class="form-element-label">
                    @Html.Raw((singleParameter.DependOn != null && singleParameter.DependOn.Count > 0 ? string.Join(" | ", singleParameter.DependOn.Select(x => "<b>" + x.ValueLabel + "</b>" + " - " + x.FieldLabel + "")) + " | " : "")) @sReportsV2.Resources.TextLanguage.Mean
                </label>
                <input type="number" 
                       class="form-element-field" 
                       value="@(singleParameter.NormalDistributionParameters != null ? singleParameter.NormalDistributionParameters.Mean : 0 )" 
                       step="0.0001" data-model="@Uri.EscapeDataString(Json.Encode(singleParameter))" 
                       data-field="mean" data-id="@Model.Id" 
                       data-label="@Model.Label" 
                       data-fieldthesaurusid="@Model.ThesaurusId" 
                       data-relatedvariables="@Uri.EscapeDataString(Json.Encode(Model.RelatedVariables))" 
                       data-type="@Model.Type" />
                <div class="form-element-bar"></div>
                <div class="form-element-description">@sReportsV2.Resources.TextLanguage.MeanCentreDistribution</div>
            </fieldset>
            <fieldset class="form-element form-input">
                <label class="form-element-label">
                    @Html.Raw((singleParameter.DependOn != null && singleParameter.DependOn.Count > 0 ? string.Join(" | ", singleParameter.DependOn.Select(x => "<b>" + x.ValueLabel + "</b>" + " - " + x.FieldLabel + "")) + " | " : ""))  @sReportsV2.Resources.TextLanguage.StandardDeviation
                </label>
                <input type="number" 
                       class="form-element-field" 
                       value="@(singleParameter.NormalDistributionParameters != null ? singleParameter.NormalDistributionParameters.Deviation : 0 )" 
                       data-field="deviation" step="0.0001" 
                       data-model="@Uri.EscapeDataString(Json.Encode(singleParameter))" 
                       data-relatedvariables="@Uri.EscapeDataString(Json.Encode(Model.RelatedVariables))" 
                       data-id="@Model.Id" 
                       data-label="@Model.Label" 
                       data-fieldthesaurusid="@Model.ThesaurusId" 
                       data-type="@Model.Type" 
                       />
                <div class="form-element-bar"></div>
                <div class="form-element-description">@sReportsV2.Resources.TextLanguage.StandardDeviationDistribution</div>
            </fieldset>
        }
        else
        {
            foreach (var value in singleParameter.Values)
            {
    <fieldset class="form-element form-input">
        <label for="lowerBoundary" class="form-element-label">
            @value.Label  @Html.Raw((singleParameter.DependOn != null && singleParameter.DependOn.Count > 0 ? " | " + string.Join(" | ", singleParameter.DependOn.Select(x => "<b>" + x.ValueLabel + "</b>" + " - " + x.FieldLabel + "")) : ""))
        </label>
        <input type="number" step="0.0001" name="field" 
               value="@value.SuccessProbability" 
               class="form-element-field" 
               placeholder="@sReportsV2.Resources.TextLanguage.SuccessProbability" 
               data-field="selectable" 
               data-value="@value.ThesaurusId" 
               data-id="@Model.Id" 
               data-type="@Model.Type" 
               data-label="@Model.Label" 
               data-fieldthesaurusid="@Model.ThesaurusId" 
               data-model="@Uri.EscapeDataString(Json.Encode(singleParameter))" 
               data-relatedvariables="@Uri.EscapeDataString(Json.Encode(Model.RelatedVariables))" 
               />
        <div class="form-element-bar"></div>
        @if (Model.Type == "checkbox")
        {
            <div class="form-element-description">
                @sReportsV2.Resources.TextLanguage.TheSuccessProbability
            </div>
        }
    </fieldset>
            }
        }
    </fieldset>
}
