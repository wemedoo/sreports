@using sReportsV2.Common.Constants;
@using sReportsV2.Common.Extensions;

@{
    var userCookieData = ViewBag.UserCookieData;
}
<input type="hidden" id="formId" name="formId" />
<div class="table-responsive filter-border">
    <table class="table table-striped table-border">
        <thead class="color-header">
            <tr class="table-header-row">
                <th id="Title" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Title')">@sReportsV2.Resources.TextLanguage.Title.ToUpper()</th>
                <th id="Version" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('Version')">@sReportsV2.Resources.TextLanguage.Version.ToUpper()</th>
                <th id="EntryDatetime" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('EntryDatetime')">@sReportsV2.Resources.TextLanguage.DateTime.ToUpper()</th>
                <th id="State" class="sort-arrow" style="border-bottom: unset;border-top: unset;" onclick="sortTable('State')">@sReportsV2.Resources.TextLanguage.State_.ToUpper()</th>
                <th style="border-bottom: unset;border-top: unset;"></th>
            </tr>
        </thead>
        <tbody>

            @foreach (sReportsV2.DTOs.Form.DataOut.FormDataOut form in Model.Data)
            {
                <tr id="row-@form.Id" class="table-content-row">
                    <td>@form.Title</td>
                    <td>@form.Version.Major.@form.Version.Minor</td>
                    <td>@form.EntryDatetime.ToTimeZonedDateTime(ViewBag.UserCookieData.TimeZoneOffset as string, ViewBag.DateFormat as string)</td>
                    <td class="@(form.State == sReportsV2.Common.Enums.FormDefinitionState.ReadyForDataCapture ? "color-green-primary" : "")">@sReportsV2.Resources.TextLanguage.ResourceManager.GetString(form.State.ToString())</td>
                    <td>
                        @if(userCookieData.UserHasPermission(PermissionNames.View, ModuleNames.Simulator))
                        {
                            <div class="dropdown show">
                                <a class="dropdown-button" href="#" data-toggle="dropdown" role="button" id="dropdownMenuLink-@form.Id" aria-haspopup="true" aria-expanded="false">
                                    <img class="dots" src="~/Content/img/icons/3dots.png">
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink-@form.Id">
                                    <a class="dropdown-item" href="#" onclick="redirectToDistributionParams(event,'@form.ThesaurusId', '@form.Version.Id')"><img class="mr-2" src="~/Content/img/icons/parameterize.svg">@sReportsV2.Resources.TextLanguage.Parameterize</a>
                                    @if (form.IsParameterize && userCookieData.UserHasPermission(PermissionNames.CreateUpdate, ModuleNames.Simulator))
                                    {
                                        <a class="dropdown-item d-flex" href="#" onclick="openGenerateDocumentsModal(event,'@form.Title', '@form.Id')"><img class="mr-2" src="~/Content/img/icons/generate_document_small.svg"><div>@sReportsV2.Resources.TextLanguage.GenerateDocuments</div></a>
                                    }
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model.Data.Count > 0)
    {
        <div>
            <div class="pager-container">
                @{
                    ViewBag.Url = "/FormDistribution/ReloadForms";
                    ViewBag.Container = "formsTableContainer";
                    ViewBag.PageNumIdentifier = "formsCurrentPage";
                }
                @Html.Partial("Pagination")
            </div>
        </div>
    }
</div>


