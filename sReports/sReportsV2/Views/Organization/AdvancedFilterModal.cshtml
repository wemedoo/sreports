@using sReportsV2.Common.Enums.DocumentPropertiesEnums
<form id="advancedFilterForm" name="AdvancedFilterForm" onsubmit="return false">
    <div class="modal fade" id="advancedFilterModal" tabindex="-1" role="dialog" aria-labelledby="advancedFilterModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content modal-content-advanced">
                <div class="float-right filter-close-btn">
                    <img class="close-modal" src="~/Content/img/icons/close_black.svg">
                </div>

                <div class="modal-body modal-body-advanced" id="advancedFilterModalContent">
                    <div class="d-flex advanced-filter-header">
                        <img class="mr-3" src="~/Content/img/icons/advanced_filter.svg">  @sReportsV2.Resources.TextLanguage.Advanced_filter
                    </div>
                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Name
                            </div>
                            <input type="text" class="filter-input" id="name" value="@(ViewBag.FilterData!= null ? ViewBag.FilterData.Name : "")">
                        </div>

                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Clinical_Domain
                            </div>
                            <select class="filter-input arrow-select" id="clinicalDomain">
                                <option value=""> @sReportsV2.Resources.TextLanguage.SelectOption</option>
                                @foreach (var option in Enum.GetNames(typeof(DocumentClinicalDomain)).OrderBy(enm => enm.ToString()))
                                {
                                    <option value="@option" @(ViewBag.FilterData.ClinicalDomain == option ? "selected" : "")>@sReportsV2.Resources.TextLanguage.ResourceManager.GetString(option)</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Identifier_type
                            </div>
                            <select class="filter-input arrow-select" id="identifierType">
                                <option value="">@sReportsV2.Resources.TextLanguage.SelectIdentifier</option>
                                <option @(ViewBag.FilterData.IdentifierType == "O4MtPatientId" ? "selected" : "") value="O4MtPatientId">O4MtId</option>
                                @foreach (var option in ViewBag.IdentifierTypes)
                                {
                                    var optionName = option.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage as string);
                                    <option id="IdentifierType_@option.Thesaurus.Id" data-display="@optionName" value="@option.Thesaurus.Id" @(ViewBag.FilterData.IdentifierType == option.Thesaurus.Id.ToString() ? "selected" : "")>@optionName</option>
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Identifier_value
                            </div>
                            <input type="text" class="filter-input " id="identifierValue" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.IdentifierValue : "")" />
                        </div>
                    </div>

                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.City
                            </div>
                            <input type="text" class="filter-input" id="city" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.City : "")">
                        </div>

                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.State
                            </div>
                            <input type="text" class="filter-input" id="state" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.State : "")">
                        </div>
                    </div>

                    <div class="d-flex margin-top-10">
                        <div class="filter-item advanced-filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Postal_code
                            </div>
                            <input type="text" class="filter-input" id="postalCode" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.PostalCode : "")">
                        </div>

                        <div class="filter-item advanced-filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Street
                            </div>
                            <input type="text" class="filter-input" id="street" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.Street : "")">
                        </div>
                    </div>
                    <div class="d-flex margin-top-10">
                        <input type="hidden" id="countryName" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.CountryName : "")">
                        <div class="advanced-filter-item filter-item country-select-input">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Country
                            </div>
                            <select class="filter-input arrow-select" id="countryId">
                                <option value=""></option>
                            </select>
                        </div>

                        <div class="filter-item advanced-filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Alias
                            </div>
                            <input type="text" class="filter-input" id="alias" value="@(ViewBag.FilterData != null ? ViewBag.FilterData.Alias : "")">
                        </div>
                    </div>

                    <div class="d-flex margin-top-10">
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Type
                            </div>
                            <select class="filter-input arrow-select" id="type">
                                <option value=""> @sReportsV2.Resources.TextLanguage.SelectOption</option>
                                @foreach (var option in ViewBag.OrganizationTypes)
                                {
                                    var optionName = option.Thesaurus.GetPreferredTermByTranslationOrDefault(ViewBag.UserCookieData.ActiveLanguage as string);
                                    <option id="Type_@option.Thesaurus.Id" data-display="@optionName" value="@option.Thesaurus.Id.ToString()" @(ViewBag.FilterData.Type == option.Thesaurus.Id.ToString() ? "selected" : "")>@optionName</option>
                                }
                            </select>
                        </div>
                        <div class="advanced-filter-item filter-item">
                            <div class="label filter-label">
                                @sReportsV2.Resources.TextLanguage.Organization_PartOf
                            </div>
                            <select class="organizations filter-input arrow-select patient-background" style="width: 100%" id="parent" name="parent" placeholder="@sReportsV2.Resources.TextLanguage.Organization_PartOfPlaceholder">
                                @if (Model != null && Model.Parent != null)
                                {
                                    <option value=""></option>
                                    <option selected value="@Model.Parent.Id">@Model.Parent.Name</option>
                                }
                                else
                                {
                                    <option selected value=""></option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="advanced-filter-line"></div>

                    <div class="d-flex mt-3 position-relative margin-top-20">
                        <div class="button-wrapper-filter filter-button float-right" id="submitFilterButton">
                            <button class="btn btn-filter-primary w-100 h-100" onclick="advanceFilter()"> @sReportsV2.Resources.TextLanguage.Filter</button>
                        </div>
                        <div class="button-wrapper-filter cancel-filter-btn float-right" id="close">
                            <a class="btn advanced-cancel" data-dismiss="modal" aria-label="Close">
                                @sReportsV2.Resources.TextLanguage.Cancel
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {
        if (hasParamInUrl('Parent')) {
            // Parent organization url parameter exists 
            let initDataSource = [];
            let parentOrganizationId = getParamFromUrl('Parent');
            $.ajax({
                type: 'GET',
                url: `/Organization/GetById?organizationId=${parentOrganizationId}`,
                success: function (data) {
                    if (!jQuery.isEmptyObject(data)) {
                        initDataSource.push(data);
                    }

                    $('.organizations').select2({
                        minimumInputLength: 3,
                        placeholder: '@sReportsV2.Resources.TextLanguage.Organization_PartOfPlaceholder',
                        allowClear: true,
                        ajax: {
                            url: `/Organization/GetAutocompleteData?organizationId=${$('#id').val()}`,
                            dataType: 'json',
                            data: function (params) {
                                return {
                                    Term: params.term, // search term
                                    Page: params.page,
                                    ExcludeId: $("#id").val()
                                };
                            },
                            // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
                        },
                        data: initDataSource
                    });
                    if (initDataSource.length > 0) {
                        $('.organizations').val(initDataSource[0].id.toString()).trigger('change');
                        reloadTable();
                    }
                },
                error: function (xhr, textStatus, thrownError) {
                    handleResponseError(xhr, thrownError);
                }
            });
        } else {
            // Default -> Parent organization url parameter does not exist
            $('.organizations').select2({
                minimumInputLength: 3,
                placeholder: '@sReportsV2.Resources.TextLanguage.Organization_PartOfPlaceholder',
                allowClear: true,
                ajax: {
                    url: `/Organization/GetAutocompleteData?organizationId=${$('#id').val()}`,
                    dataType: 'json',
                    data: function (params) {
                        return {
                            Term: params.term, // search term
                            Page: params.page,
                            ExcludeId: $("#id").val()
                        };
                    },
                    // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
                },
            });
        }
        initCustomEnumSelect2(hasParamInUrl('CountryId'), getParamFromUrl('CountryId'), "countryId", "country", "Country");
    });
</script>