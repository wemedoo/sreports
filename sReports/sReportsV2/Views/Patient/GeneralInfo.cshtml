@using sReportsV2.DTOs.CustomEnum.DataOut;
@using sReportsV2.DTOs.Common.DTO;
@using sReportsV2.Common.Extensions;
@model sReportsV2.DTOs.Patient.PatientDataOut
@{
    string hasValue = "-hasvalue";
    string activeLanguage = ViewBag.UserCookieData.ActiveLanguage;
    int selectedCitizenshipId = Model != null ? Model.CitizenshipId.GetValueOrDefault() : 0;
    int selectedReligionId = Model != null ? Model.ReligionId.GetValueOrDefault() : 0;
}
<div class="form-row remove-right-margin">

    <div class="general-partial">
        <div class="person-margin">
            <span class="person-info">@sReportsV2.Resources.TextLanguage.Person_Info</span>
        </div>

        <div class="edit-patient-left">
            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Given
                </div>
                <input type="text" class="filter-input" id="name" value="@(Model != null && Model.Name != null ? Model.Name : "")" required @ViewBag.Disabled>
            </div>

            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Gender
                </div>
                <select class="filter-input arrow-select @hasValue patient-background" id="gender" @ViewBag.Disabled>
                    <option value=""></option>
                    @foreach (var gender in Enum.GetNames(typeof(sReportsV2.Common.Enums.Gender)))
                    {
                        if (Model != null && Model.Gender != null && Model.Gender.Equals(gender.ToString()))
                        {
                            <option value="@gender" selected>@sReportsV2.Resources.TextLanguage.ResourceManager.GetString("Gender_" + gender)</option>
                        }
                        else
                        {
                            <option value="@gender">@sReportsV2.Resources.TextLanguage.ResourceManager.GetString("Gender_" + gender)</option>
                        }
                    }
                </select>
            </div>

            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Activity
                </div>
                <select class="filter-input arrow-select @hasValue patient-background" id="activity" @ViewBag.Disabled>
                    <option value=""></option>
                    <option value="true" @(Model == null || Model.Activity ? "selected" : "")>@sReportsV2.Resources.TextLanguage.Active</option>
                    <option value="false" @(Model != null && !Model.Activity ? "selected" : "")>@sReportsV2.Resources.TextLanguage.Inactive</option>
                </select>
            </div>
        </div>

        <div class="edit-patient-right">
            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Family
                </div>
                <input type="text" class="filter-input" id="familyName" value="@(Model != null && Model.FamilyName != null ? Model.FamilyName : "")" @ViewBag.Disabled>
            </div>

            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.BirthDate
                </div>
                @Html.Partial("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO()
                {
                    InputAttributes = new Dictionary<object, object> { 
                        { "class", "filter-input" }, 
                        { "id", "birthDate" }, 
                        { "name", "birthDate" }, 
                        { "value", Model != null && Model.BirthDate != null ? Model.BirthDate.Value.ToString(ViewBag.DateFormat) : "" }, 
                        { @ViewBag.Disabled, null } 
                    },
                    InputBtnAttributes = new Dictionary<object, object> { 
                        { "class", "date-img" }, 
                        { @Html.DateDisabled(((bool?)ViewBag.ReadOnly)), null } 
                    },
                })
            </div>
            <div class="advanced-filter-item input-margin">
                <label class="form-checkbox-label reset-margin">
                    <input class="form-checkbox-field chk" type="checkbox" id="deceased" checked="@(Model != null && Model.Deceased.GetValueOrDefault())" @ViewBag.Disabled />
                    <i class="form-checkbox-button custom-checkbox"></i>
                    <span class="organization-types ml-2">
                        @sReportsV2.Resources.TextLanguage.Deceased
                    </span>
                </label>
            </div>
            <div class="advanced-filter-item input-margin" id="deceasedDateTimeContainer">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Deceased_DateTime
                </div>
                @Html.Partial("~/Views/Shared/DateInput.cshtml", new sReportsV2.DTOs.Common.DateInputDTO() {
                    InputAttributes = new Dictionary<object, object> { 
                        {"class", "filter-input"}, 
                        {"id", "deceasedDateTime" }, 
                        {"name", "deceasedDateTime" }, 
                        {"value", Model != null && Model.DeceasedDateTime != null ? Model.DeceasedDateTime.Value.ToString(ViewBag.DateFormat) : "" }, 
                        { @ViewBag.Disabled, null} 
                    },
                    InputBtnAttributes = new Dictionary<object, object> { 
                        { "class", "date-img" }, 
                        { @Html.DateDisabled(((bool?)ViewBag.ReadOnly)), null } 
                    },
                })
            </div>

            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Religion
                </div>
                <select class="filter-input arrow-select @hasValue patient-background" id="religion" name="religion" @ViewBag.Disabled>
                    <option value=""></option>
                </select>
            </div>
            <div class="advanced-filter-item input-margin">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Citizenship
                </div>
                <select class="filter-input arrow-select @hasValue patient-background" id="citizenship" name="citizenship" @ViewBag.Disabled>
                    <option value=""></option>
                    @foreach (CustomEnumDataOut citizenship in ViewBag.Citizenships)
                    {
                        <option value="@citizenship.Id" selected="@(selectedCitizenshipId == citizenship.Id)">@citizenship.Thesaurus.GetPreferredTermByTranslationOrDefault(activeLanguage)</option>
                    }
                </select>
            </div>

            <div class="advanced-filter-item input-margin" id="multiple">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Multiple_birth
                </div>
                <select class="filter-input arrow-select @hasValue patient-background" id="multipleBirth" name="MultipleBirth" onchange="selectChanged()" @ViewBag.Disabled>
                    <option value=""></option>
                    <option value="true" @(Model != null && Model.MultipleBirth ? "selected" : "")>@sReportsV2.Resources.TextLanguage.True</option>
                    <option value="false" @(Model == null || !Model.MultipleBirth ? "selected" : "")>@sReportsV2.Resources.TextLanguage.False</option>
                </select>
            </div>

            <div class="advanced-filter-item input-margin" id="multipleBirth1" style=" @(Model != null && Model.MultipleBirth ? "" : "display:none") ">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.MultipleBirthNumber
                </div>
                <input type="number" class="filter-input" id="multipleBirthNumber" min="1" max="10" value="@(Model != null && Model.MultipleBirthNumber > 1 ? Model.MultipleBirthNumber : 1)" @ViewBag.Disabled>
            </div>
        </div>

    </div>


    <div class="telecom-space">

        @Html.Partial("IdentifierTable", Model != null ? Model.Identifiers : null)

        <div class="communication-part">
            <div class="person-margin communication">
                <span class="communication-info">@sReportsV2.Resources.TextLanguage.Communication</span>
            </div>
            <div class="advanced-filter-item input-margin margin-bottom-0">
                <div class="label filter-label">
                    @sReportsV2.Resources.TextLanguage.Language
                </div>
                <div class="position-relative">
                    <i class="fas fa-plus-circle plus-button"></i>
                    <select class="filter-input @hasValue patient-background" id="language" style="-webkit-appearance: none;" @ViewBag.Disabled>
                        <option value=""></option>
                        @foreach (var language in ViewBag.PatientLanguages)
                        {
                            <option value=@language.Value @(Model != null && Model.Communications != null)>@sReportsV2.Resources.TextLanguage.ResourceManager.GetString(language.Label)</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="preferred-item">
            <span class="preferred-language">@sReportsV2.Resources.TextLanguage.Languages</span>
            <span class="preferred-text">@sReportsV2.Resources.TextLanguage.SelectPreferred</span>
        </div>

        <div id="communicationTable" class="communication-table">
            <div id="tableBody">
                @if (Model != null && Model.Communications != null)
                {
                    foreach (CommunicationDTO entry in Model.Communications)
                    {
                        <div class="preferred-language-group @(entry.Preferred ? "preferred-language-text-active" : "")">
                            <span data-property="preferred" data-value="@entry.Preferred" class="radio-space">
                                @if (entry.Preferred)
                                {
                                    <input data-id="@entry.Id" type="radio" name="radioPreferred" checked value="@entry.Language" class="form-radio-field" @ViewBag.Disabled data-no-color-change="true">
                                }
                                else
                                {
                                    <input data-id="@entry.Id" type="radio" name="radioPreferred" value="@entry.Language" class="form-radio-field" @ViewBag.Disabled data-no-color-change="true">
                                }
                            </span>
                            <span id="firstLanguage" class="preferred-language-text" data-property="language" data-value="@entry.Language">@sReportsV2.Resources.TextLanguage.ResourceManager.GetString(entry.Language)</span>
                        </div>
                    }
                }
            </div>
        </div>

    </div>
</div>

<script>
    religionId = @selectedReligionId;
</script>